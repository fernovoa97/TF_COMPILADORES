//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Gramatica.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="GramaticaParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IGramaticaVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="GramaticaParser.programa"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrograma([NotNull] GramaticaParser.ProgramaContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GramaticaParser.linea"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLinea([NotNull] GramaticaParser.LineaContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GramaticaParser.declaracion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracion([NotNull] GramaticaParser.DeclaracionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GramaticaParser.tipoDato"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTipoDato([NotNull] GramaticaParser.TipoDatoContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GramaticaParser.sentencia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSentencia([NotNull] GramaticaParser.SentenciaContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GramaticaParser.bloqueSi"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBloqueSi([NotNull] GramaticaParser.BloqueSiContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GramaticaParser.bloqueMientras"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBloqueMientras([NotNull] GramaticaParser.BloqueMientrasContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GramaticaParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAsignacion([NotNull] GramaticaParser.AsignacionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GramaticaParser.llamadaFuncion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLlamadaFuncion([NotNull] GramaticaParser.LlamadaFuncionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GramaticaParser.bloque"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBloque([NotNull] GramaticaParser.BloqueContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>comparasionExpression</c>
	/// labeled alternative in <see cref="GramaticaParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparasionExpression([NotNull] GramaticaParser.ComparasionExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>parenthesizedExpression</c>
	/// labeled alternative in <see cref="GramaticaParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesizedExpression([NotNull] GramaticaParser.ParenthesizedExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>constantExpression</c>
	/// labeled alternative in <see cref="GramaticaParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstantExpression([NotNull] GramaticaParser.ConstantExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>additiveExpression</c>
	/// labeled alternative in <see cref="GramaticaParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditiveExpression([NotNull] GramaticaParser.AdditiveExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="GramaticaParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierExpression([NotNull] GramaticaParser.IdentifierExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>functionCallExpression</c>
	/// labeled alternative in <see cref="GramaticaParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCallExpression([NotNull] GramaticaParser.FunctionCallExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="GramaticaParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotExpression([NotNull] GramaticaParser.NotExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>multiplicativeExpression</c>
	/// labeled alternative in <see cref="GramaticaParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicativeExpression([NotNull] GramaticaParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>booleanExpression</c>
	/// labeled alternative in <see cref="GramaticaParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBooleanExpression([NotNull] GramaticaParser.BooleanExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GramaticaParser.multOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultOp([NotNull] GramaticaParser.MultOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GramaticaParser.addOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddOp([NotNull] GramaticaParser.AddOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GramaticaParser.compareOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompareOp([NotNull] GramaticaParser.CompareOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GramaticaParser.boolOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolOp([NotNull] GramaticaParser.BoolOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GramaticaParser.constante"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstante([NotNull] GramaticaParser.ConstanteContext context);
}
