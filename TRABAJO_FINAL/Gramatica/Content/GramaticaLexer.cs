//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Gramatica.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class GramaticaLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, ENTERO=33, DECIMAL=34, CADENA=35, BOOLEANO=36, NULO=37, IDENTIFICADOR=38, 
		WS=39;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "ENTERO", 
		"DECIMAL", "CADENA", "BOOLEANO", "NULO", "IDENTIFICADOR", "WS"
	};


	public GramaticaLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public GramaticaLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'Inicio'", "':'", "'fin'", "'.'", "'='", "';'", "'entero'", "'decimal'", 
		"'cadena'", "'si'", "'('", "')'", "'sino'", "'mientras'", "'mostrar'", 
		"','", "'{'", "'}'", "'!'", "'*'", "'/'", "'%'", "'+'", "'-'", "'=='", 
		"'!='", "'>'", "'<'", "'>='", "'<='", "'y'", "'o'", null, null, null, 
		null, "'nulo'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, "ENTERO", "DECIMAL", 
		"CADENA", "BOOLEANO", "NULO", "IDENTIFICADOR", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Gramatica.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static GramaticaLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,39,256,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,
		1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,
		7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,
		1,10,1,10,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,
		1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,
		1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,
		1,23,1,23,1,24,1,24,1,24,1,25,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,
		1,28,1,29,1,29,1,29,1,30,1,30,1,31,1,31,1,32,4,32,189,8,32,11,32,12,32,
		190,1,33,4,33,194,8,33,11,33,12,33,195,1,33,1,33,4,33,200,8,33,11,33,12,
		33,201,1,34,1,34,5,34,206,8,34,10,34,12,34,209,9,34,1,34,1,34,1,34,5,34,
		214,8,34,10,34,12,34,217,9,34,1,34,3,34,220,8,34,1,35,1,35,1,35,1,35,1,
		35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,3,35,236,8,35,1,36,1,36,
		1,36,1,36,1,36,1,37,1,37,5,37,245,8,37,10,37,12,37,248,9,37,1,38,4,38,
		251,8,38,11,38,12,38,252,1,38,1,38,0,0,39,1,1,3,2,5,3,7,4,9,5,11,6,13,
		7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,
		39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,
		63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,1,0,6,1,0,48,57,1,0,34,
		34,1,0,39,39,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,3,0,9,
		10,13,13,32,32,264,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,
		1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,
		0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
		1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,
		0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,
		1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,
		0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,
		1,0,0,0,0,77,1,0,0,0,1,79,1,0,0,0,3,86,1,0,0,0,5,88,1,0,0,0,7,92,1,0,0,
		0,9,94,1,0,0,0,11,96,1,0,0,0,13,98,1,0,0,0,15,105,1,0,0,0,17,113,1,0,0,
		0,19,120,1,0,0,0,21,123,1,0,0,0,23,125,1,0,0,0,25,127,1,0,0,0,27,132,1,
		0,0,0,29,141,1,0,0,0,31,149,1,0,0,0,33,151,1,0,0,0,35,153,1,0,0,0,37,155,
		1,0,0,0,39,157,1,0,0,0,41,159,1,0,0,0,43,161,1,0,0,0,45,163,1,0,0,0,47,
		165,1,0,0,0,49,167,1,0,0,0,51,170,1,0,0,0,53,173,1,0,0,0,55,175,1,0,0,
		0,57,177,1,0,0,0,59,180,1,0,0,0,61,183,1,0,0,0,63,185,1,0,0,0,65,188,1,
		0,0,0,67,193,1,0,0,0,69,219,1,0,0,0,71,235,1,0,0,0,73,237,1,0,0,0,75,242,
		1,0,0,0,77,250,1,0,0,0,79,80,5,73,0,0,80,81,5,110,0,0,81,82,5,105,0,0,
		82,83,5,99,0,0,83,84,5,105,0,0,84,85,5,111,0,0,85,2,1,0,0,0,86,87,5,58,
		0,0,87,4,1,0,0,0,88,89,5,102,0,0,89,90,5,105,0,0,90,91,5,110,0,0,91,6,
		1,0,0,0,92,93,5,46,0,0,93,8,1,0,0,0,94,95,5,61,0,0,95,10,1,0,0,0,96,97,
		5,59,0,0,97,12,1,0,0,0,98,99,5,101,0,0,99,100,5,110,0,0,100,101,5,116,
		0,0,101,102,5,101,0,0,102,103,5,114,0,0,103,104,5,111,0,0,104,14,1,0,0,
		0,105,106,5,100,0,0,106,107,5,101,0,0,107,108,5,99,0,0,108,109,5,105,0,
		0,109,110,5,109,0,0,110,111,5,97,0,0,111,112,5,108,0,0,112,16,1,0,0,0,
		113,114,5,99,0,0,114,115,5,97,0,0,115,116,5,100,0,0,116,117,5,101,0,0,
		117,118,5,110,0,0,118,119,5,97,0,0,119,18,1,0,0,0,120,121,5,115,0,0,121,
		122,5,105,0,0,122,20,1,0,0,0,123,124,5,40,0,0,124,22,1,0,0,0,125,126,5,
		41,0,0,126,24,1,0,0,0,127,128,5,115,0,0,128,129,5,105,0,0,129,130,5,110,
		0,0,130,131,5,111,0,0,131,26,1,0,0,0,132,133,5,109,0,0,133,134,5,105,0,
		0,134,135,5,101,0,0,135,136,5,110,0,0,136,137,5,116,0,0,137,138,5,114,
		0,0,138,139,5,97,0,0,139,140,5,115,0,0,140,28,1,0,0,0,141,142,5,109,0,
		0,142,143,5,111,0,0,143,144,5,115,0,0,144,145,5,116,0,0,145,146,5,114,
		0,0,146,147,5,97,0,0,147,148,5,114,0,0,148,30,1,0,0,0,149,150,5,44,0,0,
		150,32,1,0,0,0,151,152,5,123,0,0,152,34,1,0,0,0,153,154,5,125,0,0,154,
		36,1,0,0,0,155,156,5,33,0,0,156,38,1,0,0,0,157,158,5,42,0,0,158,40,1,0,
		0,0,159,160,5,47,0,0,160,42,1,0,0,0,161,162,5,37,0,0,162,44,1,0,0,0,163,
		164,5,43,0,0,164,46,1,0,0,0,165,166,5,45,0,0,166,48,1,0,0,0,167,168,5,
		61,0,0,168,169,5,61,0,0,169,50,1,0,0,0,170,171,5,33,0,0,171,172,5,61,0,
		0,172,52,1,0,0,0,173,174,5,62,0,0,174,54,1,0,0,0,175,176,5,60,0,0,176,
		56,1,0,0,0,177,178,5,62,0,0,178,179,5,61,0,0,179,58,1,0,0,0,180,181,5,
		60,0,0,181,182,5,61,0,0,182,60,1,0,0,0,183,184,5,121,0,0,184,62,1,0,0,
		0,185,186,5,111,0,0,186,64,1,0,0,0,187,189,7,0,0,0,188,187,1,0,0,0,189,
		190,1,0,0,0,190,188,1,0,0,0,190,191,1,0,0,0,191,66,1,0,0,0,192,194,7,0,
		0,0,193,192,1,0,0,0,194,195,1,0,0,0,195,193,1,0,0,0,195,196,1,0,0,0,196,
		197,1,0,0,0,197,199,5,46,0,0,198,200,7,0,0,0,199,198,1,0,0,0,200,201,1,
		0,0,0,201,199,1,0,0,0,201,202,1,0,0,0,202,68,1,0,0,0,203,207,5,34,0,0,
		204,206,8,1,0,0,205,204,1,0,0,0,206,209,1,0,0,0,207,205,1,0,0,0,207,208,
		1,0,0,0,208,210,1,0,0,0,209,207,1,0,0,0,210,220,5,34,0,0,211,215,5,39,
		0,0,212,214,8,2,0,0,213,212,1,0,0,0,214,217,1,0,0,0,215,213,1,0,0,0,215,
		216,1,0,0,0,216,218,1,0,0,0,217,215,1,0,0,0,218,220,5,39,0,0,219,203,1,
		0,0,0,219,211,1,0,0,0,220,70,1,0,0,0,221,222,5,118,0,0,222,223,5,101,0,
		0,223,224,5,114,0,0,224,225,5,100,0,0,225,226,5,97,0,0,226,227,5,100,0,
		0,227,228,5,101,0,0,228,229,5,114,0,0,229,236,5,111,0,0,230,231,5,102,
		0,0,231,232,5,97,0,0,232,233,5,108,0,0,233,234,5,115,0,0,234,236,5,111,
		0,0,235,221,1,0,0,0,235,230,1,0,0,0,236,72,1,0,0,0,237,238,5,110,0,0,238,
		239,5,117,0,0,239,240,5,108,0,0,240,241,5,111,0,0,241,74,1,0,0,0,242,246,
		7,3,0,0,243,245,7,4,0,0,244,243,1,0,0,0,245,248,1,0,0,0,246,244,1,0,0,
		0,246,247,1,0,0,0,247,76,1,0,0,0,248,246,1,0,0,0,249,251,7,5,0,0,250,249,
		1,0,0,0,251,252,1,0,0,0,252,250,1,0,0,0,252,253,1,0,0,0,253,254,1,0,0,
		0,254,255,6,38,0,0,255,78,1,0,0,0,10,0,190,195,201,207,215,219,235,246,
		252,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
