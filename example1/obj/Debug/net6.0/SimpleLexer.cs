//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Melanie\Desktop\TRABAJO_COMP2\TF_COMPILADORES\example1\content\Simple.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace example1.content {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class SimpleLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, WHILE=30, BOOL_OPERATOR=31, 
		INTEGER=32, FLOAT=33, STRING=34, BOOL=35, NULL=36, COMMENT=37, WS=38, 
		IDENTIFIER=39;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "WHILE", "BOOL_OPERATOR", "INTEGER", 
		"FLOAT", "STRING", "BOOL", "NULL", "COMMENT", "WS", "IDENTIFIER"
	};


	public SimpleLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'Inicio'", "':'", "'fin'", "'.'", "';'", "'Si'", "'SiNo'", "'='", 
		"'('", "','", "')'", "'!'", "'*'", "'/'", "'&'", "'rsd%'", "'Math.Pow'", 
		"'+'", "'-'", "'=='", "'!='", "'>'", "'<'", "'>='", "'<='", "'&&'", "'||'", 
		"'{'", "'}'", null, null, null, null, null, null, "'Nullo'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, "WHILE", "BOOL_OPERATOR", "INTEGER", 
		"FLOAT", "STRING", "BOOL", "NULL", "COMMENT", "WS", "IDENTIFIER"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Simple.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2)\x10E\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x3\x2\x3\x2\x3"+
		"\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3\x5"+
		"\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3"+
		"\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3"+
		"\x10\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3\x12\x3"+
		"\x12\x3\x12\x3\x12\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3"+
		"\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3\x18\x3\x18\x3\x19\x3"+
		"\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3"+
		"\x1C\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3"+
		"\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x5\x1F\xB4\n\x1F"+
		"\x3 \x3 \x3 \x3 \x5 \xBA\n \x3!\x6!\xBD\n!\r!\xE!\xBE\x3\"\x6\"\xC2\n"+
		"\"\r\"\xE\"\xC3\x3\"\x3\"\x6\"\xC8\n\"\r\"\xE\"\xC9\x3#\x3#\x3#\x3#\a"+
		"#\xD0\n#\f#\xE#\xD3\v#\x3#\x3#\x3#\x3#\x3#\a#\xDA\n#\f#\xE#\xDD\v#\x3"+
		"#\x5#\xE0\n#\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x5"+
		"$\xF0\n$\x3%\x3%\x3%\x3%\x3%\x3%\x3&\x3&\a&\xFA\n&\f&\xE&\xFD\v&\x3&\x3"+
		"&\x3\'\x6\'\x102\n\'\r\'\xE\'\x103\x3\'\x3\'\x3(\x3(\a(\x10A\n(\f(\xE"+
		"(\x10D\v(\x2\x2\x2)\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF"+
		"\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10"+
		"\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/"+
		"\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F"+
		"=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K\x2\'M\x2(O\x2)\x3\x2\n"+
		"\x4\x2QQ[[\x3\x2\x32;\x4\x2$$^^\x4\x2))^^\x4\x2\f\f\xF\xF\x5\x2\v\f\xF"+
		"\xF\"\"\x5\x2\x43\\\x61\x61\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\x11B\x2"+
		"\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2"+
		"\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2"+
		"\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2"+
		"\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2"+
		"\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2"+
		"\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2"+
		"\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2"+
		"\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2"+
		"\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2"+
		"\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x3Q\x3\x2\x2\x2\x5X\x3"+
		"\x2\x2\x2\aZ\x3\x2\x2\x2\t^\x3\x2\x2\x2\v`\x3\x2\x2\x2\r\x62\x3\x2\x2"+
		"\x2\xF\x65\x3\x2\x2\x2\x11j\x3\x2\x2\x2\x13l\x3\x2\x2\x2\x15n\x3\x2\x2"+
		"\x2\x17p\x3\x2\x2\x2\x19r\x3\x2\x2\x2\x1Bt\x3\x2\x2\x2\x1Dv\x3\x2\x2\x2"+
		"\x1Fx\x3\x2\x2\x2!z\x3\x2\x2\x2#\x7F\x3\x2\x2\x2%\x88\x3\x2\x2\x2\'\x8A"+
		"\x3\x2\x2\x2)\x8C\x3\x2\x2\x2+\x8F\x3\x2\x2\x2-\x92\x3\x2\x2\x2/\x94\x3"+
		"\x2\x2\x2\x31\x96\x3\x2\x2\x2\x33\x99\x3\x2\x2\x2\x35\x9C\x3\x2\x2\x2"+
		"\x37\x9F\x3\x2\x2\x2\x39\xA2\x3\x2\x2\x2;\xA4\x3\x2\x2\x2=\xB3\x3\x2\x2"+
		"\x2?\xB9\x3\x2\x2\x2\x41\xBC\x3\x2\x2\x2\x43\xC1\x3\x2\x2\x2\x45\xDF\x3"+
		"\x2\x2\x2G\xEF\x3\x2\x2\x2I\xF1\x3\x2\x2\x2K\xF7\x3\x2\x2\x2M\x101\x3"+
		"\x2\x2\x2O\x107\x3\x2\x2\x2QR\aK\x2\x2RS\ap\x2\x2ST\ak\x2\x2TU\a\x65\x2"+
		"\x2UV\ak\x2\x2VW\aq\x2\x2W\x4\x3\x2\x2\x2XY\a<\x2\x2Y\x6\x3\x2\x2\x2Z"+
		"[\ah\x2\x2[\\\ak\x2\x2\\]\ap\x2\x2]\b\x3\x2\x2\x2^_\a\x30\x2\x2_\n\x3"+
		"\x2\x2\x2`\x61\a=\x2\x2\x61\f\x3\x2\x2\x2\x62\x63\aU\x2\x2\x63\x64\ak"+
		"\x2\x2\x64\xE\x3\x2\x2\x2\x65\x66\aU\x2\x2\x66g\ak\x2\x2gh\aP\x2\x2hi"+
		"\aq\x2\x2i\x10\x3\x2\x2\x2jk\a?\x2\x2k\x12\x3\x2\x2\x2lm\a*\x2\x2m\x14"+
		"\x3\x2\x2\x2no\a.\x2\x2o\x16\x3\x2\x2\x2pq\a+\x2\x2q\x18\x3\x2\x2\x2r"+
		"s\a#\x2\x2s\x1A\x3\x2\x2\x2tu\a,\x2\x2u\x1C\x3\x2\x2\x2vw\a\x31\x2\x2"+
		"w\x1E\x3\x2\x2\x2xy\a(\x2\x2y \x3\x2\x2\x2z{\at\x2\x2{|\au\x2\x2|}\a\x66"+
		"\x2\x2}~\a\'\x2\x2~\"\x3\x2\x2\x2\x7F\x80\aO\x2\x2\x80\x81\a\x63\x2\x2"+
		"\x81\x82\av\x2\x2\x82\x83\aj\x2\x2\x83\x84\a\x30\x2\x2\x84\x85\aR\x2\x2"+
		"\x85\x86\aq\x2\x2\x86\x87\ay\x2\x2\x87$\x3\x2\x2\x2\x88\x89\a-\x2\x2\x89"+
		"&\x3\x2\x2\x2\x8A\x8B\a/\x2\x2\x8B(\x3\x2\x2\x2\x8C\x8D\a?\x2\x2\x8D\x8E"+
		"\a?\x2\x2\x8E*\x3\x2\x2\x2\x8F\x90\a#\x2\x2\x90\x91\a?\x2\x2\x91,\x3\x2"+
		"\x2\x2\x92\x93\a@\x2\x2\x93.\x3\x2\x2\x2\x94\x95\a>\x2\x2\x95\x30\x3\x2"+
		"\x2\x2\x96\x97\a@\x2\x2\x97\x98\a?\x2\x2\x98\x32\x3\x2\x2\x2\x99\x9A\a"+
		">\x2\x2\x9A\x9B\a?\x2\x2\x9B\x34\x3\x2\x2\x2\x9C\x9D\a(\x2\x2\x9D\x9E"+
		"\a(\x2\x2\x9E\x36\x3\x2\x2\x2\x9F\xA0\a~\x2\x2\xA0\xA1\a~\x2\x2\xA1\x38"+
		"\x3\x2\x2\x2\xA2\xA3\a}\x2\x2\xA3:\x3\x2\x2\x2\xA4\xA5\a\x7F\x2\x2\xA5"+
		"<\x3\x2\x2\x2\xA6\xA7\aO\x2\x2\xA7\xA8\ak\x2\x2\xA8\xA9\ag\x2\x2\xA9\xAA"+
		"\ap\x2\x2\xAA\xAB\av\x2\x2\xAB\xAC\at\x2\x2\xAC\xAD\a\x63\x2\x2\xAD\xB4"+
		"\au\x2\x2\xAE\xAF\aJ\x2\x2\xAF\xB0\a\x63\x2\x2\xB0\xB1\au\x2\x2\xB1\xB2"+
		"\av\x2\x2\xB2\xB4\a\x63\x2\x2\xB3\xA6\x3\x2\x2\x2\xB3\xAE\x3\x2\x2\x2"+
		"\xB4>\x3\x2\x2\x2\xB5\xBA\t\x2\x2\x2\xB6\xB7\aP\x2\x2\xB7\xB8\aq\x2\x2"+
		"\xB8\xBA\aQ\x2\x2\xB9\xB5\x3\x2\x2\x2\xB9\xB6\x3\x2\x2\x2\xBA@\x3\x2\x2"+
		"\x2\xBB\xBD\t\x3\x2\x2\xBC\xBB\x3\x2\x2\x2\xBD\xBE\x3\x2\x2\x2\xBE\xBC"+
		"\x3\x2\x2\x2\xBE\xBF\x3\x2\x2\x2\xBF\x42\x3\x2\x2\x2\xC0\xC2\t\x3\x2\x2"+
		"\xC1\xC0\x3\x2\x2\x2\xC2\xC3\x3\x2\x2\x2\xC3\xC1\x3\x2\x2\x2\xC3\xC4\x3"+
		"\x2\x2\x2\xC4\xC5\x3\x2\x2\x2\xC5\xC7\a\x30\x2\x2\xC6\xC8\t\x3\x2\x2\xC7"+
		"\xC6\x3\x2\x2\x2\xC8\xC9\x3\x2\x2\x2\xC9\xC7\x3\x2\x2\x2\xC9\xCA\x3\x2"+
		"\x2\x2\xCA\x44\x3\x2\x2\x2\xCB\xD1\a$\x2\x2\xCC\xD0\n\x4\x2\x2\xCD\xCE"+
		"\a^\x2\x2\xCE\xD0\v\x2\x2\x2\xCF\xCC\x3\x2\x2\x2\xCF\xCD\x3\x2\x2\x2\xD0"+
		"\xD3\x3\x2\x2\x2\xD1\xCF\x3\x2\x2\x2\xD1\xD2\x3\x2\x2\x2\xD2\xD4\x3\x2"+
		"\x2\x2\xD3\xD1\x3\x2\x2\x2\xD4\xE0\a$\x2\x2\xD5\xDB\a)\x2\x2\xD6\xDA\n"+
		"\x5\x2\x2\xD7\xD8\a^\x2\x2\xD8\xDA\v\x2\x2\x2\xD9\xD6\x3\x2\x2\x2\xD9"+
		"\xD7\x3\x2\x2\x2\xDA\xDD\x3\x2\x2\x2\xDB\xD9\x3\x2\x2\x2\xDB\xDC\x3\x2"+
		"\x2\x2\xDC\xDE\x3\x2\x2\x2\xDD\xDB\x3\x2\x2\x2\xDE\xE0\a)\x2\x2\xDF\xCB"+
		"\x3\x2\x2\x2\xDF\xD5\x3\x2\x2\x2\xE0\x46\x3\x2\x2\x2\xE1\xE2\aX\x2\x2"+
		"\xE2\xE3\ag\x2\x2\xE3\xE4\at\x2\x2\xE4\xE5\a\x66\x2\x2\xE5\xE6\a\x63\x2"+
		"\x2\xE6\xE7\a\x66\x2\x2\xE7\xE8\ag\x2\x2\xE8\xE9\at\x2\x2\xE9\xF0\aq\x2"+
		"\x2\xEA\xEB\aH\x2\x2\xEB\xEC\a\x63\x2\x2\xEC\xED\an\x2\x2\xED\xEE\au\x2"+
		"\x2\xEE\xF0\aq\x2\x2\xEF\xE1\x3\x2\x2\x2\xEF\xEA\x3\x2\x2\x2\xF0H\x3\x2"+
		"\x2\x2\xF1\xF2\aP\x2\x2\xF2\xF3\aw\x2\x2\xF3\xF4\an\x2\x2\xF4\xF5\an\x2"+
		"\x2\xF5\xF6\aq\x2\x2\xF6J\x3\x2\x2\x2\xF7\xFB\a%\x2\x2\xF8\xFA\n\x6\x2"+
		"\x2\xF9\xF8\x3\x2\x2\x2\xFA\xFD\x3\x2\x2\x2\xFB\xF9\x3\x2\x2\x2\xFB\xFC"+
		"\x3\x2\x2\x2\xFC\xFE\x3\x2\x2\x2\xFD\xFB\x3\x2\x2\x2\xFE\xFF\b&\x2\x2"+
		"\xFFL\x3\x2\x2\x2\x100\x102\t\a\x2\x2\x101\x100\x3\x2\x2\x2\x102\x103"+
		"\x3\x2\x2\x2\x103\x101\x3\x2\x2\x2\x103\x104\x3\x2\x2\x2\x104\x105\x3"+
		"\x2\x2\x2\x105\x106\b\'\x2\x2\x106N\x3\x2\x2\x2\x107\x10B\t\b\x2\x2\x108"+
		"\x10A\t\t\x2\x2\x109\x108\x3\x2\x2\x2\x10A\x10D\x3\x2\x2\x2\x10B\x109"+
		"\x3\x2\x2\x2\x10B\x10C\x3\x2\x2\x2\x10CP\x3\x2\x2\x2\x10D\x10B\x3\x2\x2"+
		"\x2\x11\x2\xB3\xB9\xBE\xC3\xC9\xCF\xD1\xD9\xDB\xDF\xEF\xFB\x103\x10B\x3"+
		"\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace example1.content
