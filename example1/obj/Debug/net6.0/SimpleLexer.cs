//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\fer_u\OneDrive\Escritorio\ULTIMO_COMMIT\TF_COMPILADORES\example1\content\Simple.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace example1.content {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class SimpleLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, WHILE=31, 
		BOOL_OPERATOR=32, INTEGER=33, FLOAT=34, STRING=35, BOOL=36, NULL=37, COMMENT=38, 
		WS=39, IDENTIFIER=40;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "WHILE", "BOOL_OPERATOR", 
		"INTEGER", "FLOAT", "STRING", "BOOL", "NULL", "COMMENT", "WS", "IDENTIFIER"
	};


	public SimpleLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'Inicio'", "':'", "'fin'", "'.'", "';'", "'Si'", "'SiNo'", "'='", 
		"'('", "','", "')'", "'!'", "'*'", "'/'", "'&'", "'rsd%'", "'^^'", "'^/'", 
		"'+'", "'-'", "'=='", "'!='", "'>'", "'<'", "'>='", "'<='", "'&&'", "'||'", 
		"'{'", "'}'", null, null, null, null, null, null, "'Nullo'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, "WHILE", "BOOL_OPERATOR", "INTEGER", 
		"FLOAT", "STRING", "BOOL", "NULL", "COMMENT", "WS", "IDENTIFIER"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Simple.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2*\x10D\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x3\x2"+
		"\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3"+
		"\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3"+
		"\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF"+
		"\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12"+
		"\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16"+
		"\x3\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A"+
		"\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1E"+
		"\x3\x1E\x3\x1F\x3\x1F\x3 \x3 \x3 \x3 \x3 \x3 \x3 \x3 \x3 \x3 \x3 \x3 "+
		"\x3 \x5 \xB3\n \x3!\x3!\x3!\x3!\x5!\xB9\n!\x3\"\x6\"\xBC\n\"\r\"\xE\""+
		"\xBD\x3#\x6#\xC1\n#\r#\xE#\xC2\x3#\x3#\x6#\xC7\n#\r#\xE#\xC8\x3$\x3$\x3"+
		"$\x3$\a$\xCF\n$\f$\xE$\xD2\v$\x3$\x3$\x3$\x3$\x3$\a$\xD9\n$\f$\xE$\xDC"+
		"\v$\x3$\x5$\xDF\n$\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3"+
		"%\x3%\x5%\xEF\n%\x3&\x3&\x3&\x3&\x3&\x3&\x3\'\x3\'\a\'\xF9\n\'\f\'\xE"+
		"\'\xFC\v\'\x3\'\x3\'\x3(\x6(\x101\n(\r(\xE(\x102\x3(\x3(\x3)\x3)\a)\x109"+
		"\n)\f)\xE)\x10C\v)\x2\x2\x2*\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a"+
		"\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF"+
		"\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17"+
		"-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E"+
		";\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K\x2\'M\x2(O\x2)"+
		"Q\x2*\x3\x2\n\x4\x2QQ[[\x3\x2\x32;\x4\x2$$^^\x4\x2))^^\x4\x2\f\f\xF\xF"+
		"\x5\x2\v\f\xF\xF\"\"\x5\x2\x43\\\x61\x61\x63|\x6\x2\x32;\x43\\\x61\x61"+
		"\x63|\x11A\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3"+
		"\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3"+
		"\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2"+
		"\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2"+
		"\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2"+
		")\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3"+
		"\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2"+
		"\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41"+
		"\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2"+
		"I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2"+
		"\x2\x2\x3S\x3\x2\x2\x2\x5Z\x3\x2\x2\x2\a\\\x3\x2\x2\x2\t`\x3\x2\x2\x2"+
		"\v\x62\x3\x2\x2\x2\r\x64\x3\x2\x2\x2\xFg\x3\x2\x2\x2\x11l\x3\x2\x2\x2"+
		"\x13n\x3\x2\x2\x2\x15p\x3\x2\x2\x2\x17r\x3\x2\x2\x2\x19t\x3\x2\x2\x2\x1B"+
		"v\x3\x2\x2\x2\x1Dx\x3\x2\x2\x2\x1Fz\x3\x2\x2\x2!|\x3\x2\x2\x2#\x81\x3"+
		"\x2\x2\x2%\x84\x3\x2\x2\x2\'\x87\x3\x2\x2\x2)\x89\x3\x2\x2\x2+\x8B\x3"+
		"\x2\x2\x2-\x8E\x3\x2\x2\x2/\x91\x3\x2\x2\x2\x31\x93\x3\x2\x2\x2\x33\x95"+
		"\x3\x2\x2\x2\x35\x98\x3\x2\x2\x2\x37\x9B\x3\x2\x2\x2\x39\x9E\x3\x2\x2"+
		"\x2;\xA1\x3\x2\x2\x2=\xA3\x3\x2\x2\x2?\xB2\x3\x2\x2\x2\x41\xB8\x3\x2\x2"+
		"\x2\x43\xBB\x3\x2\x2\x2\x45\xC0\x3\x2\x2\x2G\xDE\x3\x2\x2\x2I\xEE\x3\x2"+
		"\x2\x2K\xF0\x3\x2\x2\x2M\xF6\x3\x2\x2\x2O\x100\x3\x2\x2\x2Q\x106\x3\x2"+
		"\x2\x2ST\aK\x2\x2TU\ap\x2\x2UV\ak\x2\x2VW\a\x65\x2\x2WX\ak\x2\x2XY\aq"+
		"\x2\x2Y\x4\x3\x2\x2\x2Z[\a<\x2\x2[\x6\x3\x2\x2\x2\\]\ah\x2\x2]^\ak\x2"+
		"\x2^_\ap\x2\x2_\b\x3\x2\x2\x2`\x61\a\x30\x2\x2\x61\n\x3\x2\x2\x2\x62\x63"+
		"\a=\x2\x2\x63\f\x3\x2\x2\x2\x64\x65\aU\x2\x2\x65\x66\ak\x2\x2\x66\xE\x3"+
		"\x2\x2\x2gh\aU\x2\x2hi\ak\x2\x2ij\aP\x2\x2jk\aq\x2\x2k\x10\x3\x2\x2\x2"+
		"lm\a?\x2\x2m\x12\x3\x2\x2\x2no\a*\x2\x2o\x14\x3\x2\x2\x2pq\a.\x2\x2q\x16"+
		"\x3\x2\x2\x2rs\a+\x2\x2s\x18\x3\x2\x2\x2tu\a#\x2\x2u\x1A\x3\x2\x2\x2v"+
		"w\a,\x2\x2w\x1C\x3\x2\x2\x2xy\a\x31\x2\x2y\x1E\x3\x2\x2\x2z{\a(\x2\x2"+
		"{ \x3\x2\x2\x2|}\at\x2\x2}~\au\x2\x2~\x7F\a\x66\x2\x2\x7F\x80\a\'\x2\x2"+
		"\x80\"\x3\x2\x2\x2\x81\x82\a`\x2\x2\x82\x83\a`\x2\x2\x83$\x3\x2\x2\x2"+
		"\x84\x85\a`\x2\x2\x85\x86\a\x31\x2\x2\x86&\x3\x2\x2\x2\x87\x88\a-\x2\x2"+
		"\x88(\x3\x2\x2\x2\x89\x8A\a/\x2\x2\x8A*\x3\x2\x2\x2\x8B\x8C\a?\x2\x2\x8C"+
		"\x8D\a?\x2\x2\x8D,\x3\x2\x2\x2\x8E\x8F\a#\x2\x2\x8F\x90\a?\x2\x2\x90."+
		"\x3\x2\x2\x2\x91\x92\a@\x2\x2\x92\x30\x3\x2\x2\x2\x93\x94\a>\x2\x2\x94"+
		"\x32\x3\x2\x2\x2\x95\x96\a@\x2\x2\x96\x97\a?\x2\x2\x97\x34\x3\x2\x2\x2"+
		"\x98\x99\a>\x2\x2\x99\x9A\a?\x2\x2\x9A\x36\x3\x2\x2\x2\x9B\x9C\a(\x2\x2"+
		"\x9C\x9D\a(\x2\x2\x9D\x38\x3\x2\x2\x2\x9E\x9F\a~\x2\x2\x9F\xA0\a~\x2\x2"+
		"\xA0:\x3\x2\x2\x2\xA1\xA2\a}\x2\x2\xA2<\x3\x2\x2\x2\xA3\xA4\a\x7F\x2\x2"+
		"\xA4>\x3\x2\x2\x2\xA5\xA6\aO\x2\x2\xA6\xA7\ak\x2\x2\xA7\xA8\ag\x2\x2\xA8"+
		"\xA9\ap\x2\x2\xA9\xAA\av\x2\x2\xAA\xAB\at\x2\x2\xAB\xAC\a\x63\x2\x2\xAC"+
		"\xB3\au\x2\x2\xAD\xAE\aJ\x2\x2\xAE\xAF\a\x63\x2\x2\xAF\xB0\au\x2\x2\xB0"+
		"\xB1\av\x2\x2\xB1\xB3\a\x63\x2\x2\xB2\xA5\x3\x2\x2\x2\xB2\xAD\x3\x2\x2"+
		"\x2\xB3@\x3\x2\x2\x2\xB4\xB9\t\x2\x2\x2\xB5\xB6\aP\x2\x2\xB6\xB7\aq\x2"+
		"\x2\xB7\xB9\aQ\x2\x2\xB8\xB4\x3\x2\x2\x2\xB8\xB5\x3\x2\x2\x2\xB9\x42\x3"+
		"\x2\x2\x2\xBA\xBC\t\x3\x2\x2\xBB\xBA\x3\x2\x2\x2\xBC\xBD\x3\x2\x2\x2\xBD"+
		"\xBB\x3\x2\x2\x2\xBD\xBE\x3\x2\x2\x2\xBE\x44\x3\x2\x2\x2\xBF\xC1\t\x3"+
		"\x2\x2\xC0\xBF\x3\x2\x2\x2\xC1\xC2\x3\x2\x2\x2\xC2\xC0\x3\x2\x2\x2\xC2"+
		"\xC3\x3\x2\x2\x2\xC3\xC4\x3\x2\x2\x2\xC4\xC6\a\x30\x2\x2\xC5\xC7\t\x3"+
		"\x2\x2\xC6\xC5\x3\x2\x2\x2\xC7\xC8\x3\x2\x2\x2\xC8\xC6\x3\x2\x2\x2\xC8"+
		"\xC9\x3\x2\x2\x2\xC9\x46\x3\x2\x2\x2\xCA\xD0\a$\x2\x2\xCB\xCF\n\x4\x2"+
		"\x2\xCC\xCD\a^\x2\x2\xCD\xCF\v\x2\x2\x2\xCE\xCB\x3\x2\x2\x2\xCE\xCC\x3"+
		"\x2\x2\x2\xCF\xD2\x3\x2\x2\x2\xD0\xCE\x3\x2\x2\x2\xD0\xD1\x3\x2\x2\x2"+
		"\xD1\xD3\x3\x2\x2\x2\xD2\xD0\x3\x2\x2\x2\xD3\xDF\a$\x2\x2\xD4\xDA\a)\x2"+
		"\x2\xD5\xD9\n\x5\x2\x2\xD6\xD7\a^\x2\x2\xD7\xD9\v\x2\x2\x2\xD8\xD5\x3"+
		"\x2\x2\x2\xD8\xD6\x3\x2\x2\x2\xD9\xDC\x3\x2\x2\x2\xDA\xD8\x3\x2\x2\x2"+
		"\xDA\xDB\x3\x2\x2\x2\xDB\xDD\x3\x2\x2\x2\xDC\xDA\x3\x2\x2\x2\xDD\xDF\a"+
		")\x2\x2\xDE\xCA\x3\x2\x2\x2\xDE\xD4\x3\x2\x2\x2\xDFH\x3\x2\x2\x2\xE0\xE1"+
		"\aX\x2\x2\xE1\xE2\ag\x2\x2\xE2\xE3\at\x2\x2\xE3\xE4\a\x66\x2\x2\xE4\xE5"+
		"\a\x63\x2\x2\xE5\xE6\a\x66\x2\x2\xE6\xE7\ag\x2\x2\xE7\xE8\at\x2\x2\xE8"+
		"\xEF\aq\x2\x2\xE9\xEA\aH\x2\x2\xEA\xEB\a\x63\x2\x2\xEB\xEC\an\x2\x2\xEC"+
		"\xED\au\x2\x2\xED\xEF\aq\x2\x2\xEE\xE0\x3\x2\x2\x2\xEE\xE9\x3\x2\x2\x2"+
		"\xEFJ\x3\x2\x2\x2\xF0\xF1\aP\x2\x2\xF1\xF2\aw\x2\x2\xF2\xF3\an\x2\x2\xF3"+
		"\xF4\an\x2\x2\xF4\xF5\aq\x2\x2\xF5L\x3\x2\x2\x2\xF6\xFA\a%\x2\x2\xF7\xF9"+
		"\n\x6\x2\x2\xF8\xF7\x3\x2\x2\x2\xF9\xFC\x3\x2\x2\x2\xFA\xF8\x3\x2\x2\x2"+
		"\xFA\xFB\x3\x2\x2\x2\xFB\xFD\x3\x2\x2\x2\xFC\xFA\x3\x2\x2\x2\xFD\xFE\b"+
		"\'\x2\x2\xFEN\x3\x2\x2\x2\xFF\x101\t\a\x2\x2\x100\xFF\x3\x2\x2\x2\x101"+
		"\x102\x3\x2\x2\x2\x102\x100\x3\x2\x2\x2\x102\x103\x3\x2\x2\x2\x103\x104"+
		"\x3\x2\x2\x2\x104\x105\b(\x2\x2\x105P\x3\x2\x2\x2\x106\x10A\t\b\x2\x2"+
		"\x107\x109\t\t\x2\x2\x108\x107\x3\x2\x2\x2\x109\x10C\x3\x2\x2\x2\x10A"+
		"\x108\x3\x2\x2\x2\x10A\x10B\x3\x2\x2\x2\x10BR\x3\x2\x2\x2\x10C\x10A\x3"+
		"\x2\x2\x2\x11\x2\xB2\xB8\xBD\xC2\xC8\xCE\xD0\xD8\xDA\xDE\xEE\xFA\x102"+
		"\x10A\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace example1.content
