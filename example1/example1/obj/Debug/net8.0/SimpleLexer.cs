//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\yamir\RiderProjects\example1\content\Simple.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace example1.content {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class SimpleLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		WHILE=25, BOOL_OPERATOR=26, INTEGER=27, FLOAT=28, STRING=29, BOOL=30, 
		NULL=31, WS=32, IDENTIFIER=33;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "WHILE", 
		"BOOL_OPERATOR", "INTEGER", "FLOAT", "STRING", "BOOL", "NULL", "WS", "IDENTIFIER"
	};


	public SimpleLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'if'", "'else'", "'='", "'('", "','", "')'", "'!'", "'*'", 
		"'/'", "'&'", "'mod%'", "'+'", "'-'", "'=='", "'!='", "'>'", "'<'", "'>='", 
		"'<='", "'&&'", "'||'", "'{'", "'}'", null, null, null, null, null, null, 
		"'null'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, "WHILE", "BOOL_OPERATOR", "INTEGER", "FLOAT", "STRING", "BOOL", 
		"NULL", "WS", "IDENTIFIER"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Simple.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2#\xDC\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3"+
		"\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\t\x3\t\x3\n\x3\n\x3"+
		"\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3"+
		"\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3"+
		"\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3\x17\x3"+
		"\x17\x3\x17\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3"+
		"\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x5\x1A\x8D\n\x1A\x3\x1B\x3\x1B"+
		"\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x5\x1B\x97\n\x1B\x3\x1C\x6"+
		"\x1C\x9A\n\x1C\r\x1C\xE\x1C\x9B\x3\x1D\x6\x1D\x9F\n\x1D\r\x1D\xE\x1D\xA0"+
		"\x3\x1D\x3\x1D\x6\x1D\xA5\n\x1D\r\x1D\xE\x1D\xA6\x3\x1E\x3\x1E\x3\x1E"+
		"\x3\x1E\a\x1E\xAD\n\x1E\f\x1E\xE\x1E\xB0\v\x1E\x3\x1E\x3\x1E\x3\x1E\x3"+
		"\x1E\x3\x1E\a\x1E\xB7\n\x1E\f\x1E\xE\x1E\xBA\v\x1E\x3\x1E\x5\x1E\xBD\n"+
		"\x1E\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x5"+
		"\x1F\xC8\n\x1F\x3 \x3 \x3 \x3 \x3 \x3!\x6!\xD0\n!\r!\xE!\xD1\x3!\x3!\x3"+
		"\"\x3\"\a\"\xD8\n\"\f\"\xE\"\xDB\v\"\x2\x2\x2#\x3\x2\x3\x5\x2\x4\a\x2"+
		"\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r"+
		"\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2"+
		"\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C"+
		"\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x3\x2\b\x3\x2"+
		"\x32;\x4\x2$$^^\x4\x2))^^\x5\x2\v\f\xF\xF\"\"\x5\x2\x43\\\x61\x61\x63"+
		"|\x6\x2\x32;\x43\\\x61\x61\x63|\xE9\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2"+
		"\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2"+
		"\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2"+
		"\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3"+
		"\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2"+
		"\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2"+
		"\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2"+
		"\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2"+
		"\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x3\x45\x3\x2"+
		"\x2\x2\x5G\x3\x2\x2\x2\aJ\x3\x2\x2\x2\tO\x3\x2\x2\x2\vQ\x3\x2\x2\x2\r"+
		"S\x3\x2\x2\x2\xFU\x3\x2\x2\x2\x11W\x3\x2\x2\x2\x13Y\x3\x2\x2\x2\x15[\x3"+
		"\x2\x2\x2\x17]\x3\x2\x2\x2\x19_\x3\x2\x2\x2\x1B\x64\x3\x2\x2\x2\x1D\x66"+
		"\x3\x2\x2\x2\x1Fh\x3\x2\x2\x2!k\x3\x2\x2\x2#n\x3\x2\x2\x2%p\x3\x2\x2\x2"+
		"\'r\x3\x2\x2\x2)u\x3\x2\x2\x2+x\x3\x2\x2\x2-{\x3\x2\x2\x2/~\x3\x2\x2\x2"+
		"\x31\x80\x3\x2\x2\x2\x33\x8C\x3\x2\x2\x2\x35\x96\x3\x2\x2\x2\x37\x99\x3"+
		"\x2\x2\x2\x39\x9E\x3\x2\x2\x2;\xBC\x3\x2\x2\x2=\xC7\x3\x2\x2\x2?\xC9\x3"+
		"\x2\x2\x2\x41\xCF\x3\x2\x2\x2\x43\xD5\x3\x2\x2\x2\x45\x46\a=\x2\x2\x46"+
		"\x4\x3\x2\x2\x2GH\ak\x2\x2HI\ah\x2\x2I\x6\x3\x2\x2\x2JK\ag\x2\x2KL\an"+
		"\x2\x2LM\au\x2\x2MN\ag\x2\x2N\b\x3\x2\x2\x2OP\a?\x2\x2P\n\x3\x2\x2\x2"+
		"QR\a*\x2\x2R\f\x3\x2\x2\x2ST\a.\x2\x2T\xE\x3\x2\x2\x2UV\a+\x2\x2V\x10"+
		"\x3\x2\x2\x2WX\a#\x2\x2X\x12\x3\x2\x2\x2YZ\a,\x2\x2Z\x14\x3\x2\x2\x2["+
		"\\\a\x31\x2\x2\\\x16\x3\x2\x2\x2]^\a(\x2\x2^\x18\x3\x2\x2\x2_`\ao\x2\x2"+
		"`\x61\aq\x2\x2\x61\x62\a\x66\x2\x2\x62\x63\a\'\x2\x2\x63\x1A\x3\x2\x2"+
		"\x2\x64\x65\a-\x2\x2\x65\x1C\x3\x2\x2\x2\x66g\a/\x2\x2g\x1E\x3\x2\x2\x2"+
		"hi\a?\x2\x2ij\a?\x2\x2j \x3\x2\x2\x2kl\a#\x2\x2lm\a?\x2\x2m\"\x3\x2\x2"+
		"\x2no\a@\x2\x2o$\x3\x2\x2\x2pq\a>\x2\x2q&\x3\x2\x2\x2rs\a@\x2\x2st\a?"+
		"\x2\x2t(\x3\x2\x2\x2uv\a>\x2\x2vw\a?\x2\x2w*\x3\x2\x2\x2xy\a(\x2\x2yz"+
		"\a(\x2\x2z,\x3\x2\x2\x2{|\a~\x2\x2|}\a~\x2\x2}.\x3\x2\x2\x2~\x7F\a}\x2"+
		"\x2\x7F\x30\x3\x2\x2\x2\x80\x81\a\x7F\x2\x2\x81\x32\x3\x2\x2\x2\x82\x83"+
		"\ay\x2\x2\x83\x84\aj\x2\x2\x84\x85\ak\x2\x2\x85\x86\an\x2\x2\x86\x8D\a"+
		"g\x2\x2\x87\x88\aw\x2\x2\x88\x89\ap\x2\x2\x89\x8A\av\x2\x2\x8A\x8B\ak"+
		"\x2\x2\x8B\x8D\an\x2\x2\x8C\x82\x3\x2\x2\x2\x8C\x87\x3\x2\x2\x2\x8D\x34"+
		"\x3\x2\x2\x2\x8E\x8F\a\x63\x2\x2\x8F\x90\ap\x2\x2\x90\x97\a\x66\x2\x2"+
		"\x91\x92\aq\x2\x2\x92\x97\at\x2\x2\x93\x94\az\x2\x2\x94\x95\aq\x2\x2\x95"+
		"\x97\at\x2\x2\x96\x8E\x3\x2\x2\x2\x96\x91\x3\x2\x2\x2\x96\x93\x3\x2\x2"+
		"\x2\x97\x36\x3\x2\x2\x2\x98\x9A\t\x2\x2\x2\x99\x98\x3\x2\x2\x2\x9A\x9B"+
		"\x3\x2\x2\x2\x9B\x99\x3\x2\x2\x2\x9B\x9C\x3\x2\x2\x2\x9C\x38\x3\x2\x2"+
		"\x2\x9D\x9F\t\x2\x2\x2\x9E\x9D\x3\x2\x2\x2\x9F\xA0\x3\x2\x2\x2\xA0\x9E"+
		"\x3\x2\x2\x2\xA0\xA1\x3\x2\x2\x2\xA1\xA2\x3\x2\x2\x2\xA2\xA4\a\x30\x2"+
		"\x2\xA3\xA5\t\x2\x2\x2\xA4\xA3\x3\x2\x2\x2\xA5\xA6\x3\x2\x2\x2\xA6\xA4"+
		"\x3\x2\x2\x2\xA6\xA7\x3\x2\x2\x2\xA7:\x3\x2\x2\x2\xA8\xAE\a$\x2\x2\xA9"+
		"\xAD\n\x3\x2\x2\xAA\xAB\a^\x2\x2\xAB\xAD\v\x2\x2\x2\xAC\xA9\x3\x2\x2\x2"+
		"\xAC\xAA\x3\x2\x2\x2\xAD\xB0\x3\x2\x2\x2\xAE\xAC\x3\x2\x2\x2\xAE\xAF\x3"+
		"\x2\x2\x2\xAF\xB1\x3\x2\x2\x2\xB0\xAE\x3\x2\x2\x2\xB1\xBD\a$\x2\x2\xB2"+
		"\xB8\a)\x2\x2\xB3\xB7\n\x4\x2\x2\xB4\xB5\a^\x2\x2\xB5\xB7\v\x2\x2\x2\xB6"+
		"\xB3\x3\x2\x2\x2\xB6\xB4\x3\x2\x2\x2\xB7\xBA\x3\x2\x2\x2\xB8\xB6\x3\x2"+
		"\x2\x2\xB8\xB9\x3\x2\x2\x2\xB9\xBB\x3\x2\x2\x2\xBA\xB8\x3\x2\x2\x2\xBB"+
		"\xBD\a)\x2\x2\xBC\xA8\x3\x2\x2\x2\xBC\xB2\x3\x2\x2\x2\xBD<\x3\x2\x2\x2"+
		"\xBE\xBF\av\x2\x2\xBF\xC0\at\x2\x2\xC0\xC1\aw\x2\x2\xC1\xC8\ag\x2\x2\xC2"+
		"\xC3\ah\x2\x2\xC3\xC4\a\x63\x2\x2\xC4\xC5\an\x2\x2\xC5\xC6\au\x2\x2\xC6"+
		"\xC8\ag\x2\x2\xC7\xBE\x3\x2\x2\x2\xC7\xC2\x3\x2\x2\x2\xC8>\x3\x2\x2\x2"+
		"\xC9\xCA\ap\x2\x2\xCA\xCB\aw\x2\x2\xCB\xCC\an\x2\x2\xCC\xCD\an\x2\x2\xCD"+
		"@\x3\x2\x2\x2\xCE\xD0\t\x5\x2\x2\xCF\xCE\x3\x2\x2\x2\xD0\xD1\x3\x2\x2"+
		"\x2\xD1\xCF\x3\x2\x2\x2\xD1\xD2\x3\x2\x2\x2\xD2\xD3\x3\x2\x2\x2\xD3\xD4"+
		"\b!\x2\x2\xD4\x42\x3\x2\x2\x2\xD5\xD9\t\x6\x2\x2\xD6\xD8\t\a\x2\x2\xD7"+
		"\xD6\x3\x2\x2\x2\xD8\xDB\x3\x2\x2\x2\xD9\xD7\x3\x2\x2\x2\xD9\xDA\x3\x2"+
		"\x2\x2\xDA\x44\x3\x2\x2\x2\xDB\xD9\x3\x2\x2\x2\x10\x2\x8C\x96\x9B\xA0"+
		"\xA6\xAC\xAE\xB6\xB8\xBC\xC7\xD1\xD9\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace example1.content
